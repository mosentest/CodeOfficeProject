<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="mu.codeoffice.mapper.AskMapper">
	
	<resultMap id="question" type="AskQuestion">
		<id property="id" column="id"/>
		<result property="title" column="title"/>
		<result property="description" column="description"/>
		<result property="create" column="create_date"/>
		<result property="update" column="update_date"/>
		<result property="expire" column="expire_date"/>
		<result property="experience" column="experience"/>
		<result property="contribution" column="contribution"/>
		<result property="coin" column="coin"/>
		<result property="solved" column="solved"/>
		<result property="views" column="views"/>
		<result property="answers" column="solutions"/>
		<result property="votes" column="votes"/>
		<association property="creator" javaType="user" column="creator_id">
			<id property="id" column="uid"/>
			<result property="username" column="username"/>
			<result property="profilePath" column="profile_path"/>
		</association>
	</resultMap>
	
	<resultMap id="solution" type="AskSolution">
		<id property="id" column="id"/>
		<result property="solution" column="solution"/>
		<result property="questionId" column="ask_question_id"/>
		<result property="create" column="create_date"/>
		<result property="votes" column="votes"/>
		<result property="accepted" column="accepted"/>
		<association property="creator" javaType="user" column="creator_id">
			<id property="id" column="uid"/>
			<result property="username" column="username"/>
			<result property="reputation" column="reputation"/>
			<result property="experience" column="experience"/>
			<result property="contribution" column="contribution"/>
			<result property="profilePath" column="profile_path"/>
		</association>
	</resultMap>
	
	<resultMap id="comment" type="AskComment">
		<id property="id" column="id"/>
		<result property="parentType" column="parent_type"/>
		<result property="parentId" column="parent_id"/>
		<result property="comment" column="comment"/>
		<result property="create" column="create_date"/>
		<result property="votes" column="votes"/>
		<association property="creator" javaType="user" column="creator_id">
			<id property="id" column="uid"/>
			<result property="username" column="username"/>
		</association>
	</resultMap>
	
	<resultMap id="tag" type="Tag">
		<id property="id" column="id"/>
		<result property="tag" column="tag"/>
		<result property="countAsk" column="count_ask"/>
		<result property="count" column="count"/>
		<result property="create" column="create_date"/>
		<result property="update" column="update_date"/>
	</resultMap>
	
	<sql id="questionlist_select">
		SELECT 
			id,
			title,
			CONCAT(SUBSTRING(description,1,250),'...') AS description,
			create_date,
			update_date,
			expire_date,
			contribution,
			experience,
			coin,
			solved,
			views,
			solutions,
			votes
		FROM 
			ask_question
	</sql>
	
	<sql id="question_select">
		SELECT 
			ask_question.id,
			title,
			ask_question.description,
			creator_id AS uid,
			username,
			profile_path,
			ask_question.create_date,
			update_date,
			expire_date,
			ask_question.contribution,
			ask_question.experience,
			ask_question.coin,
			solved,
			views,
			solutions,
			votes
		FROM 
			ask_question
		INNER JOIN user ON user.id = ask_question.creator_id
	</sql>
	
	<sql id="tag_select">
		SELECT 
			id,
			tag,
			count_ask,
			count,
			create_date,
			update_date
	</sql>
	
	<sql id="solution_select">
		SELECT 
			ask_solution.id,
			solution,
			ask_question_id,
			ask_solution.create_date,
			creator_id AS uid,
			username,
			reputation,
			contribution,
			experience,
			profile_path,
			votes,
			accepted
		FROM 
			ask_solution
		INNER JOIN user ON user.id = ask_solution.creator_id
	</sql>
	
	<sql id="comment_select">
		SELECT 
			ask_comment.id,
			parent_type,
			parent_id,
			comment,
			ask_comment.create_date,
			votes,
			creator_id AS uid,
			username
		FROM 
			ask_comment
		INNER JOIN user ON user.id = ask_comment.creator_id
	</sql>
	
	<!-- <when test="query.column eq 'blog.category_id'">MATCH(category_path) AGAINST('${query.value}' IN BOOLEAN MODE)</when> -->
	<sql id="queries">
		WHERE status=1
		<if test="queryModel.queries.size != 0">
			<foreach item="query" collection="queryModel.queries" open=" AND " separator=" AND ">
				<choose>
					<when test="query.operator eq 'LIKE'">${query.column} LIKE CONCAT('%', #{query.value},'%')</when>
					<otherwise>${query.column} ${query.operator} #{query.value}</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>
	
	<sql id="order">
		ORDER BY ${order.column} ${order.order}
	</sql>
	
	<sql id="limit">
		LIMIT #{offset}, #{size}
	</sql>
	
	<select id="countQuestion" resultType="int">
		SELECT COUNT(*) FROM ask_question
	</select>
	
	<select id="getQuestions" resultMap="question">
		<include refid="question_select"/>
		<include refid="limit"/>
	</select>
	
	<select id="getQuestionComments" resultMap="comment">
		<include refid="comment_select"/>
		WHERE parent_id=#{id} AND parent_type=0
		ORDER BY ask_comment.id ASC
	</select>
	
	<select id="getSolutionComments" resultMap="comment">
		<include refid="comment_select"/>
		WHERE parent_id=#{id} AND parent_type=1
		ORDER BY ask_comment.id ASC
	</select>
	
	<select id="getSolutions" resultMap="solution">
		<include refid="solution_select"/>
		WHERE ask_question_id=#{id}
		ORDER BY accepted DESC, votes DESC
	</select>
	
	<select id="getTags" resultMap="tag">
		<include refid="tag_select"/>
		FROM 
			tag
		<include refid="order"/>
		<include refid="limit"/>		
	</select>
	
	<select id="getQuestionTags" resultMap="tag">
		<include refid="tag_select"/>
		FROM 
			ask_question_tag
		INNER JOIN tag ON tag.id = ask_question_tag.tag_id
		WHERE ask_question_id=#{id}
		ORDER BY count_ask DESC
	</select>
	
	<select id="getQuestion" resultMap="question">
		<include refid="question_select"/>
		WHERE ask_question.id=#{id}
	</select>
	
	<select id="getSolution" resultMap="solution">
		<include refid="solution_select"/>
		WHERE ask_solution.id=#{id}
	</select>
	
	<select id="getComment" resultMap="comment">
		<include refid="comment_select"/>
		WHERE ask_comment.id=#{id}
	</select>	
	
	<insert id="createQuestion" parameterType="AskQuestion">
		INSERT INTO ask_question (title, description, creator_id, create_date, update_date, expire_date, contribution, experience, coin, solved, views, solutions, votes) 
			VALUES (#{title}, #{description}, #{user.id}, #{create}, #{update}, #{expire}, #{contribution}, #{experience}, #{coin}, false, 0, 0, 0)
	</insert>
	
	<insert id="createSolution" parameterType="AskSolution">
		INSERT INTO ask_solution (ask_question_id, creator_id, solution, create_date, votes, accepted) 
			VALUES (#{questionId}, #{creator.id}, solution, #{create}, 0, false)
	</insert>
	
	<insert id="createComment" parameterType="AskComment" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO ask_comment (parent_type, parent_id, creator_id, comment, create_date, votes) 
			VALUES (#{parentType}, #{parentId}, #{creator.id}, #{comment}, #{create}, 0)
	</insert>
	
	<update id="updateQuestionStatus" parameterType="AskQuestion">
		UPDATE 
			ask_question 
		SET
			solved = #{solved},
			views = #{views},
			solutions = #{answers},
			votes = #{votes}
		WHERE id=#{id}
	</update>
	
	<update id="updateSolutionStatus" parameterType="AskSolution">
		UPDATE 
			ask_solution
		SET
			accepted = #{accepted},
			votes = #{votes}
		WHERE id=#{id}
	</update>
	
	<update id="updateCommentStatus" parameterType="AskComment">
		UPDATE 
			ask_comment
		SET
			votes = #{votes}
		WHERE id=#{id}
	</update>
	
	<select id="hasVotedQuestion" resultType="boolean">
		SELECT COUNT(*) = 1 FROM ask_question_vote WHERE ask_question_id=#{id} AND user_id=#{uid}
	</select>

	<select id="hasVotedSolution" resultType="boolean">
		SELECT COUNT(*) = 1 FROM ask_solution_vote WHERE ask_solution_id=#{id} AND user_id=#{uid}
	</select>
	
	<select id="hasVotedComment" resultType="boolean">
		SELECT COUNT(*) = 1 FROM ask_comment_vote WHERE ask_comment_id=#{id} AND user_id=#{uid}
	</select>
	
	<insert id="voteQuestion">
		INSERT INTO ask_question_vote(ask_question_id, user_id) VALUES(#{id}, #{uid})
	</insert>
	
	<insert id="voteSolution">
		INSERT INTO ask_solution_vote(ask_solution_id, user_id) VALUES(#{id}, #{uid})
	</insert>
	
	<insert id="voteComment">
		INSERT INTO ask_comment_vote(ask_comment_id, user_id) VALUES(#{id}, #{uid})
	</insert>
	
</mapper> 